name: CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "*" ]   # run tests on all PRs

env:
  PROJECT_ID: voicecare-project
  REGION: us-central1
  REPOSITORY: us-docker.pkg.dev/voicecare-project/artifact-repo

permissions:
  contents: read
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend, worker]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Node modules
        if: matrix.service == 'frontend'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}

      - name: Cache Python packages
        if: matrix.service == 'backend' || matrix.service == 'worker'
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles(format('{0}/requirements.txt', matrix.service)) }}

      - name: Set up Node.js
        if: matrix.service == 'frontend'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Python
        if: matrix.service == 'backend' || matrix.service == 'worker'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install & Test - Frontend
        if: matrix.service == 'frontend'
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      - name: Lint & Test - Backend
        if: matrix.service == 'backend'
        working-directory: ./backend
        run: |
          pip install -r requirements.txt
          pytest -q

      - name: Test - Worker
        if: matrix.service == 'worker'
        working-directory: ./worker
        run: |
          pip install -r requirements.txt
          pytest -q

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [frontend, backend, worker]
    env:
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL/providers/PROVIDER"
          service_account: "sa-deployer@${{ env.PROJECT_ID }}.iam.gserviceaccount.com"

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker --quiet

      - name: Build Image
        working-directory: ./${{ matrix.service }}
        run: |
          docker build -t ${REPOSITORY}/${{ matrix.service }}:${IMAGE_TAG} .

      - name: Scan Image with Trivy
        uses: aquasecurity/trivy-action@0.16.1
        with:
          image-ref: "${{ env.REPOSITORY }}/${{ matrix.service }}:${{ env.IMAGE_TAG }}"
          format: "table"
          exit-code: "1"
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

      - name: Push Image
        run: |
          docker push ${REPOSITORY}/${{ matrix.service }}:${IMAGE_TAG}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/PROJECT_NUMBER/locations/global/workloadIdentityPools/POOL/providers/PROVIDER"
          service_account: "sa-deployer@${{ env.PROJECT_ID }}.iam.gserviceaccount.com"

      - name: Deploy backend to Cloud Run
        run: |
          gcloud run deploy voicecare-backend \
            --image ${REPOSITORY}/backend:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --allow-unauthenticated=false \
            --service-account sa-backend@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
            --memory=512Mi \
            --cpu=1 \
            --concurrency=80 \
            --min-instances=1 \
            --max-instances=50

      - name: Deploy frontend to Cloud Run
        run: |
          gcloud run deploy voicecare-frontend \
            --image ${REPOSITORY}/frontend:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated=true \
            --service-account sa-frontend@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
            --memory=256Mi \
            --min-instances=0 \
            --max-instances=10

      - name: Deploy worker to Cloud Run
        run: |
          gcloud run deploy voicecare-worker \
            --image ${REPOSITORY}/worker:${{ github.sha }} \
            --region ${{ env.REGION }} \
            --no-traffic \
            --service-account sa-worker@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: Post-Deploy Health Check
        run: |
          curl -f https://voicecare-backend-${{ env.REGION }}.a.run.app/health || exit 1
